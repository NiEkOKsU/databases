// <auto-generated />
using System;
using BartlomiejKozeraProducts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BartłomiejKozeraEFLab.Migrations.ProductInvoices
{
    [DbContext(typeof(ProductInvoicesContext))]
    [Migration("20230413183233_InitProductInvoicesDatabase")]
    partial class InitProductInvoicesDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("BartlomiejKozeraProducts.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Product")
                        .HasColumnType("INTEGER");

                    b.Property<int>("invoiceNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("InvoiceID");

                    b.HasIndex("Product");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("BartlomiejKozeraProducts.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Product")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SupplierID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitsOnStock")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductID");

                    b.HasIndex("Product");

                    b.HasIndex("SupplierID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BartlomiejKozeraProducts.ProductInvoices", b =>
                {
                    b.Property<int>("ProductInvoicesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductInvoicesID");

                    b.ToTable("ProductInvoices");
                });

            modelBuilder.Entity("BartlomiejKozeraProducts.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SupplierID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("InvoiceProduct", b =>
                {
                    b.Property<int>("InvoicesInvoiceID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductsProductID")
                        .HasColumnType("INTEGER");

                    b.HasKey("InvoicesInvoiceID", "ProductsProductID");

                    b.HasIndex("ProductsProductID");

                    b.ToTable("InvoiceProduct");
                });

            modelBuilder.Entity("BartlomiejKozeraProducts.Invoice", b =>
                {
                    b.HasOne("BartlomiejKozeraProducts.ProductInvoices", null)
                        .WithMany("InvoicesID")
                        .HasForeignKey("Product");
                });

            modelBuilder.Entity("BartlomiejKozeraProducts.Product", b =>
                {
                    b.HasOne("BartlomiejKozeraProducts.ProductInvoices", null)
                        .WithMany("ProductsID")
                        .HasForeignKey("Product");

                    b.HasOne("BartlomiejKozeraProducts.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("InvoiceProduct", b =>
                {
                    b.HasOne("BartlomiejKozeraProducts.Invoice", null)
                        .WithMany()
                        .HasForeignKey("InvoicesInvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BartlomiejKozeraProducts.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BartlomiejKozeraProducts.ProductInvoices", b =>
                {
                    b.Navigation("InvoicesID");

                    b.Navigation("ProductsID");
                });

            modelBuilder.Entity("BartlomiejKozeraProducts.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
